//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace PrayForPay.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PrayerDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PrayerDBEntities object using the connection string found in the 'PrayerDBEntities' section of the application configuration file.
        /// </summary>
        public PrayerDBEntities() : base("name=PrayerDBEntities", "PrayerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrayerDBEntities object.
        /// </summary>
        public PrayerDBEntities(string connectionString) : base(connectionString, "PrayerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrayerDBEntities object.
        /// </summary>
        public PrayerDBEntities(EntityConnection connection) : base(connection, "PrayerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prayer> Prayer
        {
            get
            {
                if ((_Prayer == null))
                {
                    _Prayer = base.CreateObjectSet<Prayer>("Prayer");
                }
                return _Prayer;
            }
        }
        private ObjectSet<Prayer> _Prayer;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prayer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrayer(Prayer prayer)
        {
            base.AddObject("Prayer", prayer);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="Prayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prayer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="prayerText">Initial value of the PrayerText property.</param>
        public static Prayer CreatePrayer(global::System.Guid id, global::System.Guid userId, global::System.String prayerText)
        {
            Prayer prayer = new Prayer();
            prayer.Id = id;
            prayer.UserId = userId;
            prayer.PrayerText = prayerText;
            return prayer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrayerText
        {
            get
            {
                return _PrayerText;
            }
            set
            {
                OnPrayerTextChanging(value);
                ReportPropertyChanging("PrayerText");
                _PrayerText = StructuralObject.SetValidValue(value, false, "PrayerText");
                ReportPropertyChanged("PrayerText");
                OnPrayerTextChanged();
            }
        }
        private global::System.String _PrayerText;
        partial void OnPrayerTextChanging(global::System.String value);
        partial void OnPrayerTextChanged();

        #endregion

    }

    #endregion

}
